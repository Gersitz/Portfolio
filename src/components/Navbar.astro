---
import { Icon } from "astro-icon/components";
---

<nav>
    <div class="logo">
        <Icon name="line-md:laptop-twotone" />
    </div>
    <ul class="nav-links">
        <li><a href="#skills">About Me</a></li>
        <li><a href="#projects">Projects</a></li>
        <li><a href="#contact">Contact</a></li>
    </ul>
    <ul class="language">
        <li><a href="/">DE</a></li>
        <li><a href="/en/">EN</a></li>
        <select>
            <option value="ger-de">DE</option>
            <option value="eng-us">EN</option>
        </select>
    </ul>
    <button class="theme-switch">
        <Icon name="line-md:moon-loop" />
        <Icon name="line-md:sunny-outline-loop" />
    </button>
</nav>

<script defer>
    const themeElem = document.querySelector(".theme-switch");
    const moonIconElem = document.querySelector(
        '[data-icon="line-md:moon-loop"]',
    );
    const sunIconElem = document.querySelector(
        '[data-icon="line-md:sunny-outline-loop"]',
    );

    const getTheme = () => {
        const storedTheme = localStorage.getItem("theme");
        if (storedTheme /* !== undefined */) {
            return storedTheme;
        } else {
            // else wirkt nur, bei erstaufruf der seite
            const userPrefersDark = window.matchMedia(
                "(prefers-color-scheme: dark)",
            ).matches;
            console.log(userPrefersDark);
            return userPrefersDark ? "dark" : "light";
        }
    };
    const setTheme = (theme) => {
        // set theme class on html-tag
        document.documentElement.classList.remove("light", "dark");
        document.documentElement.classList.add(theme);
        // set hidden-icon class on theme icons
        if (theme === "dark") {
            sunIconElem.classList.remove("icon-hidden");
            moonIconElem.classList.add("icon-hidden");
        } else {
            moonIconElem.classList.remove("icon-hidden");
            sunIconElem.classList.add("icon-hidden");
        }
        // set theme in localstorage
        localStorage.setItem("theme", theme);
    };
    /**
     * C#:
     * if (x == y) -- Equalit-Operator - Checkt ob die Werte gleich sind.
     * if (x is y) -- Identity-Operator - Checkt ob die Referenz gleich ist
     */
    /**
     * if (currentTheme === "light") {
     *  return "dark";
     * } else {
     *  return "light";
     * }
     */
    themeElem.addEventListener("click", () => {
        const currentTheme = getTheme();
        // === Strict-Equality Operator
        const newTheme = currentTheme === "light" ? "dark" : "light"; // Ternary-Statement - kurzform eines "If-Statements"
        setTheme(newTheme);
    });

    document.addEventListener("DOMContentLoaded", () => {
        const currentTheme = getTheme();
        setTheme(currentTheme);
    });
</script>

<style>
    [data-icon="line-md:laptop-twotone"] {
        width: 150px;
        height: auto;
    }
    .theme-switch {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    [data-icon="line-md:moon-loop"] {
        width: 40px;
        height: auto;
        color: black;
    }
    [data-icon="line-md:sunny-outline-loop"] {
        width: 40px;
        height: auto;
        color: #cfcfcf;
        transition: color 0.3s ease-out;
    }
    [data-icon="line-md:sunny-outline-loop"]:hover {
        color: gold;
        text-shadow: 0px 0px 10px #b4b109;
        cursor: pointer;
    }
    .icon-hidden {
        display: none;
    }
    .theme-switch {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }
    nav {
        display: flex;
        flex-direction: row;
        color: #cfcfcf;
        justify-content: space-between;
        align-items: center;
        max-height: 20vh;
    }
    nav ul {
        list-style-type: none;
        padding-left: 0;
        display: flex;
        flex-direction: row;
        align-self: center;
        gap: 2rem;
    }
    nav ul li a {
        color: #cfcfcf;
        text-decoration: none;
        font-size: 1.7em;
        transition: font-variation-settings 0.3s ease-out;
        font-family: MonaspaceXenonVar;
        font-variation-settings:
            "wght" 200,
            "wdth" 100,
            "slnt" 0;
    }
    nav ul li a:hover {
        text-shadow: 0px 0px 10px #b4b109;
        color: gold;
        font-variation-settings:
            "wght" 500,
            "wdth" 105,
            "slnt" 0;
    }
    nav ul.language {
        font-size: .7rem;
        gap: 1rem;
    }
    nav button.theme-switch {
        padding: 0;
        background: none;
        border: none;
        height: fit-content;
        width: fit-content;
    }

    /* Light-Mode */
    html.light nav ul li a {
        color: rgb(45, 32, 35);
    }
</style>
